@use "sass:math";

@use "../scss/vars" as v;

 #wrapper {
  text-align: center;
}

.sub {
  color: v.$secondary-color;
  letter-spacing: 1em;
  text-transform: uppercase
}

@mixin glitchCopy {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
#bottom-gl{
  bottom: 20%
}
//napis
.glitch-off{
  position: relative;
  color: v.$primary-color;
  font-size: 4em;
  letter-spacing: 0.3em;
  }
  
     
.glitch {
  position: relative;
  color: v.$primary-color;
  font-size: 4em;
  letter-spacing: 0.3em;
  animation: glitch-skew 1s infinite linear alternate-reverse;

  &::before {
    @include glitchCopy;
    left: 2px;
    text-shadow: -2px 0 v.$secondary-color;
    clip: rect(44px, 450px, 56px, 0);
    animation: glitch-anim 5s infinite linear alternate-reverse;
  }

  &::after {
    @include glitchCopy;
    left: -2px;
    text-shadow: -2px 0 v.$secondary-color, 2px 2px v.$secondary-color;
    clip: rect(44px, 450px, 56px, 0);
    animation: glitch-anim2 5s infinite linear alternate-reverse;
  }
}
@media screen and (max-width: 1400px){
  .glitch {
    font-size: 2.6em;
  }
  .glitch-off{
    font-size: 2.6em;
  }
}
@media screen and (max-width: 1200px){
  .glitch {
    font-size: 2.5em;
  }
  .glitch-off{
    font-size: 2.5em;
  }
}
@media screen and (max-width:576px) and (orientation:portrait) {
  .glitch {
    font-size: 2em;
  }
  .glitch-off{
    font-size: 2em;
  }
}
@media screen and (max-height:576px) and (orientation:landscape) {
  .glitch {
    font-size: 2em;
  }
  .glitch-off{
    font-size: 2em;
  }
}
@-webkit-keyframes glitch-anim {
  $steps: 20;
  @for $i from 0 to $steps {
    #{percentage($i*math.div(1, $steps))} {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
      transform: skew((random(100) * 0.01) + deg);
    }
  }
}

@keyframes glitch-anim {
  $steps: 20;
  @for $i from 0 to $steps {
    #{percentage($i*math.div(1, $steps))} {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
      transform: skew((random(100) * 0.01) + deg);
    }
  }
}

@-webkit-keyframes glitch-anim2 {
  $steps: 20;
  @for $i from 0 to $steps {
    #{percentage($i*math.div(1, $steps))} {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
      transform: skew((random(100) * 0.01) + deg);
    }
  }
}

@keyframes glitch-anim2 {
  $steps: 20;
  @for $i from 0 to $steps {
    #{percentage($i*math.div(1, $steps))} {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
      transform: skew((random(100) * 0.01) + deg);
    }
  }
}

@-webkit-keyframes glitch-skew {
  $steps: 10;
  @for $i from 0 to $steps {
    #{percentage($i*math.div(1, $steps))} {
      transform: skew((random(10) - 5) + deg);
    }
  }
}

@keyframes glitch-skew {
  $steps: 10;
  @for $i from 0 to $steps {
    #{percentage($i*math.div(1, $steps))} {
      transform: skew((random(10) - 5) + deg);
    }
  }
}